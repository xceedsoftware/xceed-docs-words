"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[7237],{50701:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>u});var s=o(74848),r=o(28453);const t={},i="Hide & unhide columns",l={id:"code-snippets/column/hide-unhide-columns",title:"Hide & unhide columns",description:"This example demonstrates how to Hide/unhide columns when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/column/hide-unhide-columns.md",sourceDirName:"code-snippets/column",slug:"/code-snippets/column/hide-unhide-columns",permalink:"/xceed-libs-doc/workbooks/code-snippets/column/hide-unhide-columns",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Customize columns",permalink:"/xceed-libs-doc/workbooks/code-snippets/column/customize-columns"},next:{title:"Import Data",permalink:"/xceed-libs-doc/workbooks/category/import-data"}},d={},u=[];function c(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"hide--unhide-columns",children:"Hide & unhide columns"})}),"\n",(0,s.jsx)(n.p,{children:"This example demonstrates how to Hide/unhide columns when using the API from the Xceed Workbooks for .NET."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'    public static void HideUnhideColumns()\r\n    {\r\n      using( var workbook = Workbook.Create( "HideUnhideColumns.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Hide/Unhide Columns";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        // Fill Cells and style some cells and columns.\r\n        worksheet.Rows[ 4 ].Cells[ 2 ].Value = "Column D through F are hidden, while Column I through K are visible.";\r\n        worksheet.Rows[ 4 ].Cells[ 2 ].Style.Font.Bold = true;\r\n\r\n        // Indexes starts at 0, but at 1 in MS Excel.\r\n        for( int i = 3; i < 6; ++i )\r\n        {\r\n          worksheet.Columns[ i ].Cells[ 10 ].Value = "Hidden";\r\n          worksheet.Columns[ i ].Style.Fill.BackgroundColor = System.Drawing.Color.LightPink;\r\n        }\r\n        for( int i = 8; i < 11; ++i )\r\n        {\r\n          worksheet.Columns[ i ].Cells[ 10 ].Value = "Visible";\r\n          worksheet.Columns[ i ].Style.Fill.BackgroundColor = System.Drawing.Color.LightGreen;\r\n        }\r\n\r\n        // Hide Columns 3-5 and 8-10. Indexes starts at 0.\r\n        worksheet.Columns[ 3, 5 ].IsHidden = true;\r\n        worksheet.Columns[ 8, 10 ].IsHidden = true;\r\n\r\n        // Unhide Columns 8-10. Indexes starts at 0.\r\n        worksheet.Columns[ 8, 10 ].IsHidden = false;\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: HideUnhideColumns.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var s=o(96540);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);