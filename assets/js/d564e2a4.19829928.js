"use strict";(self.webpackChunkxceed_libs_doc=self.webpackChunkxceed_libs_doc||[]).push([[5294],{91304:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>w});var r=o(74848),l=o(28453);const s={},a="Add Formatted table",n={id:"code-snippets/table/add-formatted-table",title:"Add Formatted table",description:"This example demonstrates how to add formatted table when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/table/add-formatted-table.md",sourceDirName:"code-snippets/table",slug:"/code-snippets/table/add-formatted-table",permalink:"/xceed-libs-doc/workbooks/code-snippets/table/add-formatted-table",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Table",permalink:"/xceed-libs-doc/workbooks/category/table"},next:{title:"Remove tables",permalink:"/xceed-libs-doc/workbooks/code-snippets/table/remove-tables"}},d={},w=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"add-formatted-table",children:"Add Formatted table"})}),"\n",(0,r.jsx)(t.p,{children:"This example demonstrates how to add formatted table when using the API from the Xceed Workbooks for .NET."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'    public static void AddFormattedTable()\r\n    {\r\n      using( var workbook = Workbook.Create( "AddFormattedTable.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Add Formatted Tables";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        // Fill cells values for 1st table.\r\n        worksheet.Rows[ 4 ].Cells[ 2 ].Value = "Players";\r\n        worksheet.Rows[ 5 ].Cells[ 2 ].Value = "Tom Sawyer";\r\n        worksheet.Rows[ 6 ].Cells[ 2 ].Value = "Mika Thompson";\r\n        worksheet.Rows[ 7 ].Cells[ 2 ].Value = "Kevin Smith";\r\n        worksheet.Rows[ 4 ].Cells[ 3 ].Value = "Points";\r\n        worksheet.Rows[ 5 ].Cells[ 3 ].Value = 56;\r\n        worksheet.Rows[ 6 ].Cells[ 3 ].Value = 42;\r\n        worksheet.Rows[ 7 ].Cells[ 3 ].Value = 34;\r\n\r\n        // Create the 1st formatted table from cell (4,2) to cell (7,3), using a dark theme and showing the formatted header row.\r\n        worksheet.Tables.Add( 4, 2, 7, 3, TableStyle.TableStyleDark10, true );\r\n\r\n        // Fill cells values for 2nd table.\r\n        worksheet.Rows[ 4 ].Cells[ 6 ].Value = "Fruits";\r\n        worksheet.Rows[ 5 ].Cells[ 6 ].Value = "Strawberry";\r\n        worksheet.Rows[ 6 ].Cells[ 6 ].Value = "Orange";\r\n        worksheet.Rows[ 7 ].Cells[ 6 ].Value = "Banana";\r\n        worksheet.Rows[ 8 ].Cells[ 6 ].Value = "Apple";\r\n        worksheet.Rows[ 4 ].Cells[ 7 ].Value = "Quantity";\r\n        worksheet.Rows[ 5 ].Cells[ 7 ].Value = 8;\r\n        worksheet.Rows[ 6 ].Cells[ 7 ].Value = 2;\r\n        worksheet.Rows[ 7 ].Cells[ 7 ].Value = 3;\r\n        worksheet.Rows[ 8 ].Cells[ 7 ].Value = 3;\r\n\r\n        // Create the 2nd formatted table from cell (4,6) to cell (8,7), using a medium theme and showing the formatted header row.\r\n        var secondTable = worksheet.Tables.Add( 4, 6, 8, 7, TableStyle.TableStyleMedium20, true );\r\n        // Get this 2nd formatted table and set some properties. Tables and TableColumns can be accessed by id or name.        \r\n        secondTable.ShowFirstColumnFormatting = true;\r\n        secondTable.ShowBandedRows = true;\r\n        worksheet.Tables[ 1 ].AutoFilter.ShowFilterButton = false;\r\n        worksheet.Tables[ "Table2" ].ShowTotalRow = true;\r\n        worksheet.Tables[ "Table2" ].Columns[ "Fruits" ].TotalRowLabel = "TOTAL:";\r\n        worksheet.Tables[ "Table2" ].Columns[ "Quantity" ].TotalRowFunction = TotalRowFunction.Sum;\r\n\r\n        // Fill cells values for 3rd table.\r\n        worksheet.Rows[ 4 ].Cells[ 10 ].Value = "Employee";\r\n        worksheet.Rows[ 5 ].Cells[ 10 ].Value = "Nancy Davolio";\r\n        worksheet.Rows[ 6 ].Cells[ 10 ].Value = "Margaret Peacock";\r\n        worksheet.Rows[ 7 ].Cells[ 10 ].Value = "Steven Buchanan";\r\n        worksheet.Rows[ 8 ].Cells[ 10 ].Value = "Laura Callahan";\r\n        worksheet.Rows[ 4 ].Cells[ 11 ].Value = "Years of experience";\r\n        worksheet.Rows[ 5 ].Cells[ 11 ].Value = 12;\r\n        worksheet.Rows[ 6 ].Cells[ 11 ].Value = 2;\r\n        worksheet.Rows[ 7 ].Cells[ 11 ].Value = 9;\r\n        worksheet.Rows[ 8 ].Cells[ 11 ].Value = 7;\r\n        worksheet.Rows[ 4 ].Cells[ 12 ].Value = "Salary";\r\n        worksheet.Rows[ 5 ].Cells[ 12 ].Value = 75000;\r\n        worksheet.Rows[ 6 ].Cells[ 12 ].Value = 41000;\r\n        worksheet.Rows[ 7 ].Cells[ 12 ].Value = 64000;\r\n        worksheet.Rows[ 8 ].Cells[ 12 ].Value = 55000;\r\n\r\n        // Adjust alignment and format for 3rd table.\r\n        worksheet.Columns[ 11 ].Style.Alignment.Horizontal = HorizontalAlignment.Center;\r\n        worksheet.Columns[ 12 ].Style.CustomFormat = "$0,000";\r\n        worksheet.Columns[ 12 ].Style.Alignment.Horizontal = HorizontalAlignment.Center;\r\n\r\n        // Create the 3rd formatted table from cell (4,10) to cell (8,12), using a light theme and showing the formatted header row.\r\n        var thirdTable = worksheet.Tables.Add( 4, 10, 8, 12, TableStyle.TableStyleLight14, true );\r\n        // Get this 3rd formatted table and set some properties. Tables and TableColumns can be accessed by position or name.        \r\n        thirdTable.ShowFirstColumnFormatting = true;\r\n        thirdTable.ShowLastColumnFormatting = true;\r\n        worksheet.Tables[ 2 ].ShowBandedRows = true;\r\n        worksheet.Tables[ 2 ].ShowBandedColumns = true;\r\n        worksheet.Tables[ 2 ].AutoFilter.ShowFilterButton = false;\r\n        worksheet.Tables[ "Table3" ].ShowTotalRow = true;\r\n        worksheet.Tables[ "Table3" ].Columns[ "Employee" ].TotalRowLabel = "Avg:";\r\n        worksheet.Tables[ "Table3" ].Columns[ "Years of experience" ].TotalRowFunction = TotalRowFunction.Average;\r\n        worksheet.Tables[ "Table3" ].Columns[ "Salary" ].TotalRowFunction = TotalRowFunction.CustomFormula;\r\n        worksheet.Tables[ "Table3" ].Columns[ "Salary" ].TotalRowFormula = "=AVERAGE(M6:M9)";\r\n\r\n        // AutoFit all columns with content.\r\n        worksheet.Columns.AutoFit();\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: AddFormattedTable.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>n});var r=o(96540);const l={},s=r.createContext(l);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function n(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);