"use strict";(self.webpackChunkxceed_libs_doc=self.webpackChunkxceed_libs_doc||[]).push([[1340],{35817:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>f});var r=n(74848),i=n(28453),c=n(11470),a=n(19365);const o={},s="How To Handle a PKCS #7 Formatted Client Certificate",l={id:"code-snippets/making-secure-connections/file04",title:"How To Handle a PKCS #7 Formatted Client Certificate",description:"7 Formatted Client Certificate",source:"@site/ftp/code-snippets/making-secure-connections/file04.md",sourceDirName:"code-snippets/making-secure-connections",slug:"/code-snippets/making-secure-connections/file04",permalink:"/xceed-libs-doc/ftp/code-snippets/making-secure-connections/file04",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarftp",previous:{title:"How To Send a Client Certificate",permalink:"/xceed-libs-doc/ftp/code-snippets/making-secure-connections/file03"},next:{title:"SFTP capabilities",permalink:"/xceed-libs-doc/ftp/category/sftp-capabilities"}},u={},f=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"how-to-handle-a-pkcs-7-formatted-client-certificate",children:"How To Handle a PKCS #7 Formatted Client Certificate"})}),"\n",(0,r.jsxs)(t.p,{children:["Here is an example on how to handle a PKCS #7 formatted client certificate when making an ",(0,r.jsx)(t.strong,{children:"SSL"})," connection."]}),"\n",(0,r.jsxs)(c.A,{children:[(0,r.jsx)(a.A,{value:"csharp",label:"C#",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'    static void ClientCertificateExample()\r\n    {\r\n      try\r\n      {\r\n        // Load the certificate file into a byte array\r\n        byte[] certificateBytes = File.ReadAllBytes( @"D:\\Xceed\\PKCS7Certificates.p7b" );\r\n\r\n        // Create an object that can decode the certificate data\r\n        System.Security.Cryptography.Pkcs.SignedCms cms = new System.Security.Cryptography.Pkcs.SignedCms();\r\n        \r\n        // Decode the certificates\r\n        cms.Decode( certificateBytes );\r\n\r\n        FtpClient ftp = new FtpClient();\r\n        //ftp.TraceWriter = Console.Out;\r\n\r\n        string host = "localhost";\r\n        int port = 990;\r\n\r\n        // Pick an authentication method\r\n        AuthenticationMethod authenticationMethod = AuthenticationMethod.Ssl;\r\n\r\n        // Pick verification flags. If unsure, pick \'None\'.\r\n        VerificationFlags verificationFlags = VerificationFlags.None;\r\n\r\n        // The client certificate to submit to the server\r\n        Certificate clientCertificate = null;\r\n\r\n        // Subscribe to the CertificateReceived event\r\n        ftp.CertificateReceived += new CertificateReceivedEventHandler( OnCertificateReceived );\r\n\r\n        /* A PKCS #7 file can contain more than one certificate. The certificates are in the collection\r\n        * specified in the cms.Certificates property.\r\n        * \r\n        * If you know which certificate the FTP server is waiting for, simply supply it to\r\n        * the Connect() method. If you do not know which is the correct one, you can try to connect\r\n        * using each one in turn until the server accepts one. */\r\n        \r\n        // Go through each certificate in the collection\r\n        foreach( System.Security.Cryptography.X509Certificates.X509Certificate2 x509certificate in cms.Certificates )\r\n        {\r\n          // Create a client certificate out of the current x509 certificate\r\n          clientCertificate = new Certificate( x509certificate );\r\n\r\n          try\r\n          {\r\n            // Connect implicitly to the server using encryption.\r\n            // This form always enables encryption for the data channel (for file transfers)\r\n            ftp.Connect( host, port, authenticationMethod, verificationFlags, clientCertificate );\r\n          }\r\n          catch( FtpSslException )\r\n          {\r\n            // An FtpSslException exception will be thrown if the client certificate is rejected\r\n          }\r\n\r\n          // If we connected successfully to the server\r\n          if( ftp.Connected )\r\n          {\r\n            // No need to try again\r\n            break;\r\n          }\r\n        }\r\n\r\n        try\r\n        {\r\n          // Login. The exchanged information will be encrypted\r\n          ftp.Login( "username", "password" );\r\n\r\n          /* Perform your file transfers */\r\n        }\r\n        finally\r\n        {\r\n          // Make sure we always disconnect\r\n          ftp.Disconnect();\r\n\r\n          ftp.CertificateReceived -= new CertificateReceivedEventHandler( OnCertificateReceived );\r\n        }\r\n      }\r\n      catch( Exception exception )\r\n      {\r\n        // Output some information about it\r\n        Console.WriteLine( "--\x3e{0}: {1}\\n{2}", exception.GetType().Name, exception.Message, exception.StackTrace );\r\n\r\n        // Fetch the inner exception\r\n        exception = exception.InnerException;\r\n\r\n        // While there is an exception\r\n        while( exception != null )\r\n        {\r\n          // Output some information about it\r\n          Console.WriteLine( "--\x3eInner exception: {0}: {1}\\n{2}", exception.GetType().Name, exception.Message, exception.StackTrace );\r\n\r\n          // Fetch the inner exception\r\n          exception = exception.InnerException;\r\n        }\r\n      }\r\n    }\r\n\r\n    static void OnCertificateReceived( object sender, CertificateReceivedEventArgs e )\r\n    {\r\n      // Always accept the certificate\r\n      e.Action = VerificationAction.Accept;\r\n    }\n'})})}),(0,r.jsx)(a.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-vb.NET",children:"  Private Shared Sub ClientCertificateExample()\r\n    Try\r\n      ' Load the certificate file into a byte array\r\n      Dim certificateBytes() As Byte = File.ReadAllBytes(\"D:\\Xceed\\PKCS7Certificates.p7b\")\r\n\r\n      ' Create an object that can decode the certificate data\r\n      Dim cms As New System.Security.Cryptography.Pkcs.SignedCms()\r\n\r\n      ' Decode the certificates\r\n      cms.Decode(certificateBytes)\r\n\r\n      Dim ftp As New FtpClient()\r\n      'ftp.TraceWriter = Console.Out;\r\n\r\n      Dim host As String = \"localhost\"\r\n      Dim port As Integer = 990\r\n\r\n      ' Pick an authentication method\r\n      Dim authenticationMethod As AuthenticationMethod = AuthenticationMethod.Ssl\r\n\r\n      ' Pick verification flags. If unsure, pick 'None'.\r\n      Dim verificationFlags As VerificationFlags = VerificationFlags.None\r\n\r\n      ' The client certificate to submit to the server\r\n      Dim clientCertificate As Certificate = Nothing\r\n\r\n      ' Subscribe to the CertificateReceived event\r\n      AddHandler ftp.CertificateReceived, AddressOf OnCertificateReceived\r\n\r\n'         A PKCS #7 file can contain more than one certificate. The certificates are in the collection\r\n'         * specified in the cms.Certificates property.\r\n'         * \r\n'         * If you know which certificate the FTP server is waiting for, simply supply it to\r\n'         * the Connect() method. If you do not know which is the correct one, you can try to connect\r\n'         * using each one in turn until the server accepts one. \r\n\r\n      ' Go through each certificate in the collection\r\n      For Each x509certificate As System.Security.Cryptography.X509Certificates.X509Certificate2 In cms.Certificates\r\n        ' Create a client certificate out of the current x509 certificate\r\n        clientCertificate = New Certificate(x509certificate)\r\n\r\n        Try\r\n          ' Connect implicitly to the server using encryption.\r\n          ' This form always enables encryption for the data channel (for file transfers)\r\n          ftp.Connect(host, port, authenticationMethod, verificationFlags, clientCertificate)\r\n        Catch e1 As FtpSslException\r\n          ' An FtpSslException exception will be thrown if the client certificate is rejected\r\n        End Try\r\n\r\n        ' If we connected successfully to the server\r\n        If ftp.Connected Then\r\n          ' No need to try again\r\n          Exit For\r\n        End If\r\n      Next x509certificate\r\n\r\n      Try\r\n        ' Login. The exchanged information will be encrypted\r\n        ftp.Login(\"username\", \"password\")\r\n\r\n        ' Perform your file transfers \r\n      Finally\r\n        ' Make sure we always disconnect\r\n        ftp.Disconnect()\r\n\r\n        RemoveHandler ftp.CertificateReceived, AddressOf OnCertificateReceived\r\n      End Try\r\n    Catch exception As Exception\r\n      ' Output some information about it\r\n      Console.WriteLine(\"--\x3e{0}: {1}\" & Constants.vbLf & \"{2}\", exception.GetType().Name, exception.Message, exception.StackTrace)\r\n\r\n      ' Fetch the inner exception\r\n      exception = exception.InnerException\r\n\r\n      ' While there is an exception\r\n      Do While exception IsNot Nothing\r\n        ' Output some information about it\r\n        Console.WriteLine(\"--\x3eInner exception: {0}: {1}\" & Constants.vbLf & \"{2}\", exception.GetType().Name, exception.Message, exception.StackTrace)\r\n\r\n        ' Fetch the inner exception\r\n        exception = exception.InnerException\r\n      Loop\r\n    End Try\r\n  End Sub\r\n\r\n  Private Shared Sub OnCertificateReceived(ByVal sender As Object, ByVal e As CertificateReceivedEventArgs)\r\n    ' Always accept the certificate\r\n    e.Action = VerificationAction.Accept\r\n  End Sub\n"})})})]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},19365:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var r=n(34164);const i={tabItem:"tabItem_Ymn6"};var c=n(74848);function a(e){let{children:t,hidden:n,className:a}=e;return(0,c.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,a),hidden:n,children:t})}},11470:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(96540),i=n(34164),c=n(23104),a=n(56347),o=n(205),s=n(57485),l=n(31682),u=n(70679);function f(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??function(e){return f(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:i}}=e;return{value:t,label:n,attributes:r,default:i}}))}(n);return function(e){const t=(0,l.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const i=(0,a.W6)(),c=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(c),(0,r.useCallback)((e=>{if(!c)return;const t=new URLSearchParams(i.location.search);t.set(c,e),i.replace({...i.location,search:t.toString()})}),[c,i])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,c=d(e),[a,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:c}))),[l,f]=h({queryString:n,groupId:i}),[m,y]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,c]=(0,u.Dv)(n);return[i,(0,r.useCallback)((e=>{n&&c.set(e)}),[n,c])]}({groupId:i}),b=(()=>{const e=l??m;return p({value:e,tabValues:c})?e:null})();(0,o.A)((()=>{b&&s(b)}),[b]);return{selectedValue:a,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:c}))throw new Error(`Can't select invalid tab value=${e}`);s(e),f(e),y(e)}),[f,y,c]),tabValues:c}}var y=n(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var C=n(74848);function x(e){let{className:t,block:n,selectedValue:r,selectValue:a,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:l}=(0,c.a_)(),u=e=>{const t=e.currentTarget,n=s.indexOf(t),i=o[n].value;i!==r&&(l(t),a(i))},f=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,C.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:c}=e;return(0,C.jsx)("li",{role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,ref:e=>s.push(e),onKeyDown:f,onClick:u,...c,className:(0,i.A)("tabs__item",b.tabItem,c?.className,{"tabs__item--active":r===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:c}=e;const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=a.find((e=>e.props.value===c));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,C.jsx)("div",{className:"margin-top--md",children:a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==c})))})}function g(e){const t=m(e);return(0,C.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,C.jsx)(x,{...t,...e}),(0,C.jsx)(v,{...t,...e})]})}function w(e){const t=(0,y.A)();return(0,C.jsx)(g,{...e,children:f(e.children)},String(t))}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const i={},c=r.createContext(i);function a(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);