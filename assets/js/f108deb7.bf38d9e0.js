"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[3484],{1062:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=n(74848),r=n(28453);const i={},d="FTP Client Properties",c={id:"basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-properties",title:"FTP Client Properties",description:"Xceed FTP for .NET, via the FtpClient and AsyncFtpClient classes, exposes the following properties, which can be used to determine the behavior of the FTP client when it connects and is connected to an FTP server.",source:"@site/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-properties.md",sourceDirName:"basic-concepts/ftp-capabilities/ftp-client-interface",slug:"/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-properties",permalink:"/xceed-libs-doc/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-properties",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarftp",previous:{title:"WinForms applications and threading",permalink:"/xceed-libs-doc/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/winform-apps-threading"},next:{title:"FTP Client Methods",permalink:"/xceed-libs-doc/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-methods"}},o={},l=[];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"ftp-client-properties",children:"FTP Client Properties"})}),"\n",(0,s.jsxs)(t.p,{children:["Xceed FTP for .NET, via the ",(0,s.jsx)(t.code,{children:"FtpClient"})," and ",(0,s.jsx)(t.code,{children:"AsyncFtpClient"})," classes, exposes the following properties, which can be used to determine the behavior of the FTP client when it connects and is connected to an FTP server."]}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["AsyncFtpClient's methods now call the corresponding synchronous methods on a background thread. Therefore, the AsyncFtpClient class is now considered obsolete. It is recommended to use ",(0,s.jsx)(t.code,{children:"FtpClient"})," and assign a ",(0,s.jsx)(t.code,{children:"SynchronizingObject"})," to its ",(0,s.jsx)(t.code,{children:"SynchronizingObject"})," property to improve code readability."]})}),"\n",(0,s.jsx)(t.p,{children:"Click on any of the properties listed below for detailed information about that property and how it affects the FTP client."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Properties"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Busy"})}),(0,s.jsx)(t.td,{children:"Indicates if the FTP client is currently performing an FTP operation."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Connected"})}),(0,s.jsx)(t.td,{children:"Indicates if the FTP client is connected to an FTP server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Encoding"})}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.strong,{children:"Encoding"})," that is used to encode commands sent to the server and decode replies and folder listings received from the server."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"HostName"})}),(0,s.jsx)(t.td,{children:"The host name used to connect."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"KeepAliveInterval"})}),(0,s.jsx)(t.td,{children:"The interval, in seconds, at which a NOOP command is sent on the command channel while idle or during a file transfer."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ListingParsers"})}),(0,s.jsxs)(t.td,{children:["A collection of ",(0,s.jsx)(t.code,{children:"FtpListingParser"})," objects that are used to parse the listing lines returned when retrieving the contents of a remote folder."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"LocalAddress"})}),(0,s.jsx)(t.td,{children:"The local IP address and port from which the FTP client is connected."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"LocalDataAddress"})}),(0,s.jsx)(t.td,{children:"The IP address and port of the client-side data connection for subsequent data connections."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"PassiveTransfer"})}),(0,s.jsx)(t.td,{children:"Indicates if the FTP client should initiate the data connection rather than the FTP server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"PreAllocateStorage"})}),(0,s.jsxs)(t.td,{children:["Indicates if the FTP server must reserve enough space ",(0,s.jsx)(t.strong,{children:"before"})," a file is sent."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Proxy"})}),(0,s.jsx)(t.td,{children:"The proxy client to use for connecting and/or logging in via a proxy server (supports only HTTP proxy servers)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"RepresentationType"})}),(0,s.jsx)(t.td,{children:"Indicates how the data is transferred to and from the FTP server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"SendTelnetInterruptSignal"})}),(0,s.jsx)(t.td,{children:"Indicates if the Telnet interrupt signal should be sent before the QUIT command, allowing the FTP server to be notified of the connection termination."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"SendTypeCommand"})}),(0,s.jsx)(t.td,{children:"Indicates if the TYPE command should be sent before initiating a file transfer."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ServerAddress"})}),(0,s.jsx)(t.td,{children:"The IP address and port to which the FTP client is connected."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"ServerFolderSeparator"})}),(0,s.jsx)(t.td,{children:"The FTP server's folder separator character."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"State"})}),(0,s.jsx)(t.td,{children:"Indicates the current state of the FTP client."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"SynchronizingObject"})}),(0,s.jsx)(t.td,{children:"The object used to marshal event-handler calls that are issued when an interval has elapsed."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Timeout"})}),(0,s.jsx)(t.td,{children:"Indicates, in seconds, after what period of time an FTP operation should time out."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"TraceWriter"})}),(0,s.jsx)(t.td,{children:"Traces the connection/disconnection process and the commands and replies exchanged with the FTP server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"TransferMode"})}),(0,s.jsx)(t.td,{children:"The transfer mode used to send and receive data to and from an FTP server."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"UseRemoteAddress"})}),(0,s.jsx)(t.td,{children:"Indicates if the remote address should be used for transfers."})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>c});var s=n(96540);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);