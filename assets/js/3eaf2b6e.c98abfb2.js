"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[1745],{92542:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var o=r(74848),a=r(28453);const n={},s="Import datatables",l={id:"code-snippets/import-data/import-datatables",title:"Import datatables",description:"This example demonstrates how to import datatables when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/import-data/import-datatables.md",sourceDirName:"code-snippets/import-data",slug:"/code-snippets/import-data/import-datatables",permalink:"/xceed-libs-doc/workbooks/code-snippets/import-data/import-datatables",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Import CSV",permalink:"/xceed-libs-doc/workbooks/code-snippets/import-data/import-csv"},next:{title:"Picture",permalink:"/xceed-libs-doc/workbooks/category/picture"}},i={},d=[];function c(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"import-datatables",children:"Import datatables"})}),"\n",(0,o.jsx)(t.p,{children:"This example demonstrates how to import datatables when using the API from the Xceed Workbooks for .NET."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'    public static void ImportDataTables()\r\n    {\r\n      using( var workbook = Workbook.Create( "ImportDataTables.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Import DataTables";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        worksheet.Cells[ "B4" ].Value = "Import a DataTable and style it:";\r\n        worksheet.Cells[ "B4" ].Style.Font.Color = Color.Blue;\r\n\r\n        // Define a dataTable, the import options(show specific ColumnNames) and call the ImportData function.\r\n        var dataTable = new DataTable( "Employees" );\r\n        dataTable.Columns.Add( "Name", typeof( string ) );\r\n        dataTable.Columns.Add( "Position", typeof( string ) );\r\n        dataTable.Columns.Add( "Experience", typeof( double ) );\r\n        dataTable.Columns.Add( "Salary", typeof( int ) );\r\n        dataTable.Rows.Add( "Jenny Melchuck", "Project Manager", 11.5d, 77000 );\r\n        dataTable.Rows.Add( "Cindy Gartner", "Medical Assistant", 1.3d, 56000 );\r\n        dataTable.Rows.Add( "Carl Jones", "Web Designer", 4d, 66000 );\r\n        dataTable.Rows.Add( "Anna Karlweiss", "Account Executive", 7.8d, 51000 );\r\n        dataTable.Rows.Add( "Julia Robertson", "Marketing Coordinator", 17.6d, 65000 );\r\n        var dataTableImportOptions = new DataTableImportOptions() { DestinationTopLeftAddress = "B5", ColumnNames = new string[] { "Name", "Experience", "Position" }, IsColumnNamesShown = true };\r\n        worksheet.ImportData( dataTable, dataTableImportOptions );\r\n\r\n        // AutoFit all columns, starting at row 4 up to row 10 (rowId starts at 0), with column sizes from 0 to 255.\r\n        worksheet.Columns.AutoFit( 0, 255, 4, 10 );\r\n\r\n        // Center data in column C.\r\n        worksheet.Columns[ "C" ].Style.Alignment.Horizontal = HorizontalAlignment.Center;\r\n        // Bold DataTable\'s ColumnNames.\r\n        worksheet.Rows[ 4 ].Style.Font.Bold = true;\r\n        // Create a Table with the DataTable.\r\n        var table = worksheet.Tables.Add( "B5", "D10" );\r\n        table.AutoFilter.ShowFilterButton = false;\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: ImportDataTables.xslx\\n" );\r\n      }\r\n    }\r\n\r\n    private enum Team\r\n    {\r\n      Chicago_Hornets,\r\n      Miami_Ducks,\r\n      NewYork_Bucs,\r\n      LosAngelese_Raiders\r\n    }   \r\n\r\n    private class Player\r\n    {\r\n      public string Name { get; set; }\r\n\r\n      public int Number { get; set; }\r\n\r\n      public Team Team { get; set; }\r\n    }\n'})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>l});var o=r(96540);const a={},n=o.createContext(a);function s(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);