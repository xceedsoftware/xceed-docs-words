"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[5712],{75935:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>i,contentTitle:()=>k,default:()=>a,frontMatter:()=>n,metadata:()=>h,toc:()=>d});var s=r(74848),t=r(28453);const n={},k="Add, Remove, Hide Worksheets",h={id:"code-snippets/worksheet/add-remove-hide-worksheet",title:"Add, Remove, Hide Worksheets",description:"This example demonstrates how to add, remove or hide worksheets when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/worksheet/add-remove-hide-worksheet.md",sourceDirName:"code-snippets/worksheet",slug:"/code-snippets/worksheet/add-remove-hide-worksheet",permalink:"/xceed-libs-doc/workbooks/code-snippets/worksheet/add-remove-hide-worksheet",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Worksheet",permalink:"/xceed-libs-doc/workbooks/category/worksheet"},next:{title:"Cell, Row, Column access",permalink:"/xceed-libs-doc/workbooks/code-snippets/worksheet/cell-row-column-access"}},i={},d=[];function l(e){const o={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"add-remove-hide-worksheets",children:"Add, Remove, Hide Worksheets"})}),"\n",(0,s.jsx)(o.p,{children:"This example demonstrates how to add, remove or hide worksheets when using the API from the Xceed Workbooks for .NET."}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-csharp",children:'    public static void AddWorksheets()\r\n    {\r\n      using( var workbook = Workbook.Create( "AddWorksheets.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Add Worksheets";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        // Fill cells in 1st worksheet.\r\n        worksheet.Cells[ "D5" ].Value = "This is the first Worksheet.";\r\n\r\n        // Add a worksheet with default "SheetX" name.\r\n        workbook.Worksheets.Add();\r\n\r\n        // Fill cells in 2nd worksheet.\r\n        workbook.Worksheets[ 1 ].Cells[ "D5" ].Value = "This is the second Worksheet.";\r\n\r\n        // Add a worksheet with name "Third Sheet".\r\n        workbook.Worksheets.Add( "Third Sheet" );\r\n\r\n        // Fill cells in 3rd worksheet.\r\n        workbook.Worksheets[ "Third Sheet" ].Cells[ "D5" ].Value = "This is the third Worksheet.";\r\n\r\n        // We now have 3 Worksheets in the Workbook.\r\n        Debug.Assert( workbook.Worksheets.Count == 3 );\r\n        Debug.Assert( workbook.Worksheets.Contains( "Third Sheet" ) );\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: AddWorksheets.xlsx\\n" );\r\n      }\r\n    }\r\n\r\n    public static void RemoveWorksheets()\r\n    {\r\n      using( var workbook = Workbook.Create( "RemoveWorksheets.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Remove Worksheets";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        // Fill cells in 1st worksheet.\r\n        worksheet.Cells[ "D5" ].Value = "This is the first Worksheet.";\r\n\r\n        // Add a worksheet with default "Sheet2" name.\r\n        workbook.Worksheets.Add();\r\n\r\n        // Fill cells in 2nd worksheet.\r\n        workbook.Worksheets[ 1 ].Cells[ "D5" ].Value = "This is the second Worksheet.";\r\n\r\n        // Add a worksheet with name "Third Sheet".\r\n        workbook.Worksheets.Add( "Third Sheet" );\r\n\r\n        // Fill cells in 3rd worksheet.\r\n        workbook.Worksheets[ "Third Sheet" ].Cells[ "D5" ].Value = "This is the third Worksheet.";\r\n\r\n        // Add a worksheet with default "Sheet4" name.\r\n        workbook.Worksheets.Add();\r\n\r\n        // Fill cells in 4th worksheet.\r\n        workbook.Worksheets[ 3 ].Cells[ "D5" ].Value = "This is the fourth Worksheet.";\r\n\r\n        // We now have 4 Worksheets in the Workbook.\r\n        Debug.Assert( workbook.Worksheets.Count == 4 );\r\n\r\n        // Remove all worksheets from worksheet id = 1 to worksheet id = 2.\r\n        workbook.Worksheets.Remove( workbook.Worksheets[ 1, 2 ] );\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: RemoveWorksheets.xlsx\\n" );\r\n      }\r\n    }\r\n\r\n    public static void HideWorksheets()\r\n    {\r\n      using( var workbook = Workbook.Create( "HideWorksheets.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Hide Worksheets";\r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        // Fill cells in 1st worksheet.\r\n        worksheet.Cells[ "D5" ].Value = "This is the First Worksheet.";\r\n\r\n        // Add 3 worksheets and fill them.\r\n        workbook.Worksheets.Add();\r\n        workbook.Worksheets[ 1 ].Cells[ "D5" ].Value = "This is the Second Worksheet.";\r\n        workbook.Worksheets.Add();\r\n        workbook.Worksheets[ 2 ].Cells[ "D5" ].Value = "This is the Third Worksheet.";\r\n        workbook.Worksheets.Add();\r\n        workbook.Worksheets[ 3 ].Cells[ "D5" ].Value = "This is the Fourth Worksheet.";\r\n        workbook.Worksheets.Add();\r\n        workbook.Worksheets[ 4 ].Cells[ "D5" ].Value = "This is the Fifth Worksheet.";\r\n\r\n        // We now have 4 Worksheets in the Workbook.\r\n        Debug.Assert( workbook.Worksheets.Count == 5 );\r\n\r\n        // Hide the 2nd worksheet. It can be unhided through MS Excel UI.\r\n        workbook.Worksheets[ 1 ].Visibility = WorksheetVisibility.Hidden;\r\n\r\n        // Hide the 3rd and 4th worksheets. They can NOT be unhided through MS Excel UI.\r\n        workbook.Worksheets[ 2, 3 ].Visibility = WorksheetVisibility.Collapsed;\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: HideWorksheets.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function a(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,o,r)=>{r.d(o,{R:()=>k,x:()=>h});var s=r(96540);const t={},n=s.createContext(t);function k(e){const o=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function h(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:k(e.components),s.createElement(n.Provider,{value:o},e.children)}}}]);