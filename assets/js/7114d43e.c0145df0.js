"use strict";(self.webpackChunkxceed_libs_doc=self.webpackChunkxceed_libs_doc||[]).push([[3452],{24158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var i=n(74848),s=n(28453);const r={},c="Ftp Client Events",d={id:"basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-events",title:"Ftp Client Events",description:"An event is a message raised by an object to signal the occurrence of an action. In order to receive event notifications, a caller must subscribe to the desired events.",source:"@site/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-events.md",sourceDirName:"basic-concepts/ftp-capabilities/ftp-client-interface",slug:"/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-events",permalink:"/xceed-libs-doc/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-events",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarftp",previous:{title:"FTP Client Methods",permalink:"/xceed-libs-doc/ftp/basic-concepts/ftp-capabilities/ftp-client-interface/ftp-client-methods"},next:{title:"FTP glossary",permalink:"/xceed-libs-doc/ftp/category/ftp-glossary"}},o={},l=[];function a(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"ftp-client-events",children:"Ftp Client Events"})}),"\n",(0,i.jsxs)(t.p,{children:["An ",(0,i.jsx)(t.em,{children:"event"})," is a message ",(0,i.jsx)(t.em,{children:"raised"})," by an object to signal the occurrence of an action. In order to receive event notifications, a caller must subscribe to the desired events."]}),"\n",(0,i.jsxs)(t.p,{children:["Xceed FTP for .NET, via the ",(0,i.jsx)(t.code,{children:"FtpClient"})," and ",(0,i.jsx)(t.code,{children:"AsyncFtpClient"})," classes, exposes the following events which can be used to provide various information during an FTP operation."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"AsyncFtpClient"}),"'s methods now call the corresponding synchronous methods on a background thread. For this reason, the ",(0,i.jsx)(t.code,{children:"AsyncFtpClient"})," class is now considered obsolete. It is therefore recommended to use ",(0,i.jsx)(t.code,{children:"FtpClient"})," and assign a ",(0,i.jsx)(t.strong,{children:"SynchronizingObject"})," to its ",(0,i.jsx)(t.code,{children:"SynchronizingObject"})," property to improve code readability."]})}),"\n",(0,i.jsx)(t.p,{children:"Click on any one of the events listed below for detailed information regarding that event and examples of how it can be used."}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Events"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"CertificateReceived"})}),(0,i.jsx)(t.td,{children:"Raised when an FTP server's certificate was received and verified."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"CertificateRequired"})}),(0,i.jsx)(t.td,{children:"Raised when a client certificate is required by the FTP server, or the one provided was rejected."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"CommandSent"})}),(0,i.jsx)(t.td,{children:"Raised once for every command sent to the FTP server."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Disconnected"})}),(0,i.jsxs)(t.td,{children:["Raised when the ",(0,i.jsx)(t.code,{children:"Disconnect"})," method is called as well as when the connection is terminated by the FTP server."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"FileTransferStatus"})}),(0,i.jsx)(t.td,{children:"Raised for every 4Kb sent or received during a file transfer."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"MultipleFileTransferError"})}),(0,i.jsx)(t.td,{children:"Raised when an error occurs while transferring multiple files to or from the FTP server to determine what action should be taken."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ParsingListingLine"})}),(0,i.jsx)(t.td,{children:"Raised when a listing line is received from the FTP server."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ReceivingFile"})}),(0,i.jsx)(t.td,{children:"Raised for each file being received from the FTP server."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"ReplyReceived"})}),(0,i.jsx)(t.td,{children:"Raised once for each reply received from the FTP server. If a reply contains multiple lines, they will be received as a group."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"SendingFile"})}),(0,i.jsx)(t.td,{children:"Raised for each file being sent to the FTP server."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"StateChanged"})}),(0,i.jsxs)(t.td,{children:["Raised when the ",(0,i.jsx)(t.code,{children:"State"})," of the FTP client changes."]})]})]})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Keep in mind that you should subscribe only to the necessary events to prevent a reduction in performance."})}),"\n",(0,i.jsxs)(t.p,{children:["A list of the equivalent ",(0,i.jsx)(t.code,{children:"FTP commands"})," that are sent by each method is also available ",(0,i.jsx)(t.a,{href:"/ftp/basic-concepts/ftp-capabilities/ftp-glossary/ftp-commands",children:"here"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>d});var i=n(96540);const s={},r=i.createContext(s);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);