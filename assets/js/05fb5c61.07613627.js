"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[2617],{4638:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var r=t(74848),i=t(28453),a=t(11470),o=t(19365);const c={},s="How To Make An Explicit Secure Connection",l={id:"code-snippets/making-secure-connections/file01",title:"How To Make An Explicit Secure Connection",description:"Here is an example on how to make an explicit SSL connection.",source:"@site/ftp/code-snippets/making-secure-connections/file01.md",sourceDirName:"code-snippets/making-secure-connections",slug:"/code-snippets/making-secure-connections/file01",permalink:"/xceed-libs-doc/ftp/code-snippets/making-secure-connections/file01",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarftp",previous:{title:"Making secure connections",permalink:"/xceed-libs-doc/ftp/category/making-secure-connections"},next:{title:"How To Make An Implicit Secure Connection",permalink:"/xceed-libs-doc/ftp/code-snippets/making-secure-connections/file02"}},u={},d=[];function f(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"how-to-make-an-explicit-secure-connection",children:"How To Make An Explicit Secure Connection"})}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example on how to make an explicit ",(0,r.jsx)(n.strong,{children:"SSL"})," connection."]}),"\n",(0,r.jsxs)(a.A,{children:[(0,r.jsx)(o.A,{value:"csharp",label:"C#",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'    static void ExplicitSSLExample()\r\n    {\r\n      try\r\n      {\r\n        FtpClient ftp = new FtpClient();\r\n        //ftp.TraceWriter = Console.Out;\r\n\r\n        // Subscribe to the CertificateReceived event\r\n        ftp.CertificateReceived += new CertificateReceivedEventHandler( OnCertificateReceived );\r\n\r\n        // Connect to the server normally, unencrypted, at the usual ftp port\r\n        ftp.Connect( "localhost", 21 );\r\n\r\n        try\r\n        {\r\n          // Pick an authentication method\r\n          AuthenticationMethod authenticationMethod = AuthenticationMethod.Ssl;\r\n\r\n          // Pick verification flags. If unsure, pick \'None\'.\r\n          VerificationFlags verificationFlags = VerificationFlags.None;\r\n\r\n          // Supply a client certificate to submit to the server. This example doesn\'t use one\r\n          Certificate clientCertificate = null;\r\n\r\n          // Decide if the data channel (for file transfers) will be encrypted or not\r\n          DataChannelProtection dataChannelProtection = DataChannelProtection.Private;\r\n\r\n          // Authenticate and encrypt the connection\r\n          ftp.Authenticate( authenticationMethod, verificationFlags, clientCertificate, dataChannelProtection );\r\n\r\n          // Login. The exchanged information will be encrypted\r\n          ftp.Login( "username", "password" );\r\n\r\n          /* Perform your file transfers */\r\n        }\r\n        finally\r\n        {\r\n          // Make sure we always disconnect\r\n          ftp.Disconnect();\r\n\r\n          ftp.CertificateReceived -= new CertificateReceivedEventHandler( OnCertificateReceived );\r\n        }\r\n      }\r\n      catch( Exception exception )\r\n      {\r\n        // Output some information about it\r\n        Console.WriteLine( "--\x3e{0}: {1}\\n{2}", exception.GetType().Name, exception.Message, exception.StackTrace );\r\n\r\n        // Fetch the inner exception\r\n        exception = exception.InnerException;\r\n\r\n        // While there is an exception\r\n        while( exception != null )\r\n        {\r\n          // Output some information about it\r\n          Console.WriteLine( "--\x3eInner exception: {0}: {1}\\n{2}", exception.GetType().Name, exception.Message, exception.StackTrace );\r\n\r\n          // Fetch the inner exception\r\n          exception = exception.InnerException;\r\n        }\r\n      }\r\n    }\r\n\r\n    static void OnCertificateReceived( object sender, CertificateReceivedEventArgs e )\r\n    {\r\n      // The Status argument property tells you if the server certificate was accepted\r\n      // based on the VerificationFlags provided in the call to Connect().\r\n      if( e.Status != VerificationStatus.ValidCertificate )\r\n      {\r\n        Console.WriteLine( "The server certificate is invalid: {0}", e.Status.ToString() );\r\n        Console.WriteLine( e.ServerCertificate.ToString() );\r\n\r\n        // You have three choices here:\r\n        //\r\n        //  1) Refuse the certificate by setting e.Action to VerificationAction.Reject,\r\n        //      thus making the authentication fail. This is e.Action\'s default value\r\n        //      when the server certificate isn\'t valid.\r\n        //\r\n        //  2) Set e.Flags to less restrictive criterion and ask the library to\r\n        //      validate the certificate again by setting e.Action to\r\n        //      VerificationAction.VerifyAgain.\r\n        //\r\n        //  3) Force the library to accept this certificate by setting e.Action to\r\n        //      VerificationAction.Accept.\r\n        //\r\n        // We\'ll do #1 or #3, depending on the user\'s answer.\r\n\r\n        Console.WriteLine( "Do you want to accept this certificate anyway? [Y/N]" );\r\n\r\n        int answer = Console.Read();\r\n        if( ( answer == \'y\' ) || ( answer == \'Y\' ) )\r\n        {\r\n          e.Action = VerificationAction.Accept;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        // e.Action\'s default value is VerificationAction.Accept\r\n        Console.WriteLine( "Valid certificate received from server." );\r\n      }\r\n    }\n'})})}),(0,r.jsx)(o.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-vb.NET",children:"  Private Shared Sub ExplicitSSLExample()\r\n    Try\r\n      Dim ftp As New FtpClient()\r\n      'ftp.TraceWriter = Console.Out;\r\n\r\n      ' Subscribe to the CertificateReceived event\r\n      AddHandler ftp.CertificateReceived, AddressOf OnCertificateReceived\r\n\r\n      ' Connect to the server normally, unencrypted, at the usual ftp port\r\n      ftp.Connect(\"localhost\", 21)\r\n\r\n      Try\r\n        ' Pick an authentication method\r\n        Dim authenticationMethod As AuthenticationMethod = AuthenticationMethod.Ssl\r\n\r\n        ' Pick verification flags. If unsure, pick 'None'.\r\n        Dim verificationFlags As VerificationFlags = VerificationFlags.None\r\n\r\n        ' Supply a client certificate to submit to the server. This example doesn't use one\r\n        Dim clientCertificate As Certificate = Nothing\r\n\r\n        ' Decide if the data channel (for file transfers) will be encrypted or not\r\n        Dim dataChannelProtection As DataChannelProtection = DataChannelProtection.Private\r\n\r\n        ' Authenticate and encrypt the connection\r\n        ftp.Authenticate(authenticationMethod, verificationFlags, clientCertificate, dataChannelProtection)\r\n\r\n        ' Login. The exchanged information will be encrypted\r\n        ftp.Login(\"username\", \"password\")\r\n\r\n        ' Perform your file transfers \r\n      Finally\r\n        ' Make sure we always disconnect\r\n        ftp.Disconnect()\r\n\r\n        RemoveHandler ftp.CertificateReceived, AddressOf OnCertificateReceived\r\n      End Try\r\n    Catch exception As Exception\r\n      ' Output some information about it\r\n      Console.WriteLine(\"--\x3e{0}: {1}\" & Constants.vbLf & \"{2}\", exception.GetType().Name, exception.Message, exception.StackTrace)\r\n\r\n      ' Fetch the inner exception\r\n      exception = exception.InnerException\r\n\r\n      ' While there is an exception\r\n      Do While exception IsNot Nothing\r\n        ' Output some information about it\r\n        Console.WriteLine(\"--\x3eInner exception: {0}: {1}\" & Constants.vbLf & \"{2}\", exception.GetType().Name, exception.Message, exception.StackTrace)\r\n\r\n        ' Fetch the inner exception\r\n        exception = exception.InnerException\r\n      Loop\r\n    End Try\r\n  End Sub\r\n\r\n  Private Shared Sub OnCertificateReceived(ByVal sender As Object, ByVal e As CertificateReceivedEventArgs)\r\n    ' The Status argument property tells you if the server certificate was accepted\r\n    ' based on the VerificationFlags provided in the call to Connect().\r\n    If e.Status <> VerificationStatus.ValidCertificate Then\r\n      Console.WriteLine(\"The server certificate is invalid: {0}\", e.Status.ToString())\r\n      Console.WriteLine(e.ServerCertificate.ToString())\r\n\r\n      ' You have three choices here:\r\n      '\r\n      '  1) Refuse the certificate by setting e.Action to VerificationAction.Reject,\r\n      '      thus making the authentication fail. This is e.Action's default value\r\n      '      when the server certificate isn't valid.\r\n      '\r\n      '  2) Set e.Flags to less restrictive criterion and ask the library to\r\n      '      validate the certificate again by setting e.Action to\r\n      '      VerificationAction.VerifyAgain.\r\n      '\r\n      '  3) Force the library to accept this certificate by setting e.Action to\r\n      '      VerificationAction.Accept.\r\n      '\r\n      ' We'll do #1 or #3, depending on the user's answer.\r\n\r\n      Console.WriteLine(\"Do you want to accept this certificate anyway? [Y/N]\")\r\n\r\n      Dim answer As Integer = Console.Read()\r\n      If (answer = AscW(\"y\"c)) OrElse (answer = AscW(\"Y\"c)) Then\r\n        e.Action = VerificationAction.Accept\r\n      End If\r\n    Else\r\n      ' e.Action's default value is VerificationAction.Accept\r\n      Console.WriteLine(\"Valid certificate received from server.\")\r\n    End If\r\n  End Sub\n"})})})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var r=t(34164);const i={tabItem:"tabItem_Ymn6"};var a=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(i.tabItem,o),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>A});var r=t(96540),i=t(34164),a=t(23104),o=t(56347),c=t(205),s=t(57485),l=t(31682),u=t(70679);function d(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function f(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:i}}=e;return{value:n,label:t,attributes:r,default:i}}))}(t);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const i=(0,o.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(a),(0,r.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function v(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=f(e),[o,s]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:a}))),[l,d]=h({queryString:t,groupId:i}),[v,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,u.Dv)(t);return[i,(0,r.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),b=(()=>{const e=l??v;return p({value:e,tabValues:a})?e:null})();(0,c.A)((()=>{b&&s(b)}),[b]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),d(e),m(e)}),[d,m,a]),tabValues:a}}var m=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=t(74848);function x(e){let{className:n,block:t,selectedValue:r,selectValue:o,tabValues:c}=e;const s=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),u=e=>{const n=e.currentTarget,t=s.indexOf(n),i=c[t].value;i!==r&&(l(n),o(i))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>s.push(e),onKeyDown:d,onClick:u,...a,className:(0,i.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:a}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function C(e){const n=v(e);return(0,g.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,g.jsx)(x,{...n,...e}),(0,g.jsx)(y,{...n,...e})]})}function A(e){const n=(0,m.A)();return(0,g.jsx)(C,{...e,children:d(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(96540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);