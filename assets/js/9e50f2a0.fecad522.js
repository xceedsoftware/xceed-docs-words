"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[3245],{17224:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var s=n(74848),r=n(28453);const t={title:"Zip for .NET"},l="Features of Xceed Zip for .NET",o={id:"intro",title:"Zip for .NET",description:".NET Technology",source:"@site/zip/intro.md",sourceDirName:".",slug:"/intro",permalink:"/xceed-libs-doc/zip/intro",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Zip for .NET"},sidebar:"sidebarzip",next:{title:"Installation instructions",permalink:"/xceed-libs-doc/zip/installation-instructions/overview"}},a={},c=[{value:".NET Technology",id:"net-technology",level:2},{value:"Major Features",id:"major-features",level:2},{value:"Tar and GZip Features (<em>non-FileSystem GZip support only in CF version</em>)",id:"tar-and-gzip-features-non-filesystem-gzip-support-only-in-cf-version",level:2},{value:"Other Features",id:"other-features",level:2},{value:"Self-Extracting Zip File Features",id:"self-extracting-zip-file-features",level:2}];function d(e){const i={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"features-of-xceed-zip-for-net",children:"Features of Xceed Zip for .NET"})}),"\n",(0,s.jsx)(i.h2,{id:"net-technology",children:".NET Technology"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"100% managed code, written in C#; complete source code available through a Blueprint subscription"}),"\n",(0,s.jsx)(i.li,{children:"Entirely rewritten and redesigned -- not a .NET interface over a recycled ActiveX component like some other software vendors are trying to sell"}),"\n",(0,s.jsx)(i.li,{children:"Object-oriented design created specifically for versions 4 and 2.0 to 3.5 of the .NET Framework"}),"\n",(0,s.jsx)(i.li,{children:"Seamless integration with the .NET base class libraries"}),"\n",(0,s.jsx)(i.li,{children:"All error handling works through .NET exception classes"}),"\n",(0,s.jsx)(i.li,{children:"Objects don\u2019t need to be explicitly disposed of"}),"\n",(0,s.jsx)(i.li,{children:"CLS compliant (Common Language Specification)"}),"\n",(0,s.jsx)(i.li,{children:"Does not use unsafe blocks for minimal permission requirements"}),"\n",(0,s.jsxs)(i.li,{children:["Works with .NET Isolated Storage for temporary files as needed (",(0,s.jsx)(i.em,{children:"not available in .NET CF version"}),")"]}),"\n",(0,s.jsx)(i.li,{children:"Documentation fully integrated into Visual Studio .NET"}),"\n",(0,s.jsxs)(i.li,{children:["VB.NET and C# samples include:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"A WinZip\u2122-like zip application"}),"\n",(0,s.jsx)(i.li,{children:"A PKZIP\u2122-like console zip application"}),"\n",(0,s.jsx)(i.li,{children:"A streaming compression sample"}),"\n",(0,s.jsxs)(i.li,{children:["A Windows Explorer-like application that allows you to work with files, folders, and zip files interchangeably; also shows how to compress and decompress HTTP web responses with GZip, memory streams, and file streams using Zlib/Deflate (",(0,s.jsx)(i.em,{children:"not all samples are available for .NET CF version"}),")"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"The .NET 4 build is compiled using the Client Profile."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"major-features",children:"Major Features"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["File and folder synchronization, on ",(0,s.jsx)(i.code,{children:"FileSystemItem"})," and ",(0,s.jsx)(i.code,{children:"FileSystemItem"}),"-derived objects, such as ",(0,s.jsx)(i.code,{children:"AbstractFile"})," or ",(0,s.jsx)(i.code,{children:"AbstractFolder"})," objects and their derivatives"]}),"\n",(0,s.jsx)(i.li,{children:"Full Windows Vista support"}),"\n",(0,s.jsxs)(i.li,{children:['Three new "Quick" classes provide static methods that let you perform FTP, Tar, and GZip operations with a single line of code: ',(0,s.jsx)(i.code,{children:"QuickFtp"}),", ",(0,s.jsx)(i.code,{children:"QuickTar"}),", and ",(0,s.jsx)(i.code,{children:"QuickGZip"}),". These new classes accompany and complement the currently available ",(0,s.jsx)(i.code,{children:"QuickZip"})," and ",(0,s.jsx)(i.code,{children:"QuickCompression"})," classes."]}),"\n",(0,s.jsx)(i.li,{children:"Xceed FTP for .NET Compact Framework"}),"\n",(0,s.jsxs)(i.li,{children:["Easy-to-use, rock-solid security through industry-standard AES encryption, compatible with WinZip 9 and higher, with encryption strengths of 128, 192, and 256 bits. Alternative AES implementations to the default can be specified. ",(0,s.jsx)(i.strong,{children:"(Not supported by Xceed Zip for .NET Compact Framework)"})]}),"\n",(0,s.jsxs)(i.li,{children:["The only library to provide WinZip 12 compatibility, supporting the LZMA algorithm for improved compression in certain situations. ",(0,s.jsx)(i.strong,{children:"(New in version 4.1)"})]}),"\n",(0,s.jsxs)(i.li,{children:["UTF-8 character encoding is available in headers for improved support of international characters in filenames and comments. ",(0,s.jsx)(i.strong,{children:"(New in version 4.1)"})]}),"\n",(0,s.jsx)(i.li,{children:"Support for the Zip64 zip file format"}),"\n",(0,s.jsx)(i.li,{children:"Support for BZip2 compression algorithm"}),"\n",(0,s.jsx)(i.li,{children:"Support for the PPMd compression algorithm, for producing the most compressed output possible, especially with text and XML files"}),"\n",(0,s.jsx)(i.li,{children:"Support for extra headers containing detailed time-stamp information in both PKWARE and Info-Zip formats (last modified, last accessed, and creation) and Unicode file names (for international characters)."}),"\n",(0,s.jsx)(i.li,{children:"Create new zip files or update existing zip files on disk or in memory"}),"\n",(0,s.jsx)(i.li,{children:"Zip or unzip to and from disks, memory, or isolated storage"}),"\n",(0,s.jsx)(i.li,{children:"Read, write, and update zip files split into multiple parts"}),"\n",(0,s.jsx)(i.li,{children:"Create powerful fully customized self-extracting zip files"}),"\n",(0,s.jsx)(i.li,{children:"Supports the new Deflate64\u2122 compression method"}),"\n",(0,s.jsx)(i.li,{children:"List contents of a zip file with complete file specifications"}),"\n",(0,s.jsx)(i.li,{children:"Compress or decompress any .NET stream"}),"\n",(0,s.jsx)(i.li,{children:"Supports encryption and decryption of .NET streams using compatible encryption"}),"\n",(0,s.jsx)(i.li,{children:"Compress and decompress byte arrays completely in memory"}),"\n",(0,s.jsx)(i.li,{children:"Copy, move, rename, delete, and change attributes of files and folders in a zip file, on disk, in memory, or in isolated storage"}),"\n",(0,s.jsx)(i.li,{children:"Zip password encryption"}),"\n",(0,s.jsx)(i.li,{children:"One-line shortcut classes for basic zip file and compression operations"}),"\n",(0,s.jsx)(i.li,{children:"Fully extensible classes so you can customize the library\u2019s functionality as needed"}),"\n",(0,s.jsx)(i.li,{children:"Information-rich status report events with percentages, byte and file counts"}),"\n",(0,s.jsx)(i.li,{children:"Programmable filter system to limit processing to specific files or folders, with built-in filters for file attribute, size, date timestamp, and filenames. Create your own custom filters as needed."}),"\n",(0,s.jsxs)(i.li,{children:["Efficiently creates zip files by allowing developers to decide whether folder entries should be written to the archive, which reduces its size. ",(0,s.jsx)(i.strong,{children:"(New in version 5.1/4.3)"})]}),"\n",(0,s.jsxs)(i.li,{children:["Can create archives using the Deflate format without compression, for full compatibility with Xceed Real-Time Zip and generally improved flexibility. ",(0,s.jsx)(i.strong,{children:"(New in version 5.1/4.3)"})]}),"\n"]}),"\n",(0,s.jsxs)(i.h2,{id:"tar-and-gzip-features-non-filesystem-gzip-support-only-in-cf-version",children:["Tar and GZip Features (",(0,s.jsx)(i.em,{children:"non-FileSystem GZip support only in CF version"}),")"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Tar and GZip for maximum compatibility between your applications and the data they need to work with"}),"\n",(0,s.jsx)(i.li,{children:"Handle Tar and GZip files as easily as if they were regular files and folders"}),"\n",(0,s.jsx)(i.li,{children:"Full read/write compatibility with USTAR format Tar archives"}),"\n",(0,s.jsx)(i.li,{children:"Read compatibility with GNU Tar archives as long as archive entries do not use the header extensions of this format"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"other-features",children:"Other Features"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Zip encryption on a per-file basis (",(0,s.jsx)(i.em,{children:"password protection only in .NET CF version"}),")"]}),"\n",(0,s.jsx)(i.li,{children:"Recursively zip or unzip entire directories and their contents"}),"\n",(0,s.jsx)(i.li,{children:"Control the path information stored in the zip file for each file or folder"}),"\n",(0,s.jsx)(i.li,{children:"Zip or unzip only files newer than those already in the zip file or destination folder"}),"\n",(0,s.jsx)(i.li,{children:"Overwrite files only in certain conditions"}),"\n",(0,s.jsx)(i.li,{children:"Split zip file can use the Pkware or Xceed naming convention for each zip file part or create your own custom naming convention"}),"\n",(0,s.jsx)(i.li,{children:"Split zip file parts can be written to different folders"}),"\n",(0,s.jsx)(i.li,{children:"Triggers only the events your application subscribes to for increased performance"}),"\n",(0,s.jsx)(i.li,{children:"Get and set individual file comments or the global zip file comment"}),"\n",(0,s.jsx)(i.li,{children:"Supports different encryption passwords for each file"}),"\n",(0,s.jsx)(i.li,{children:"Controllable compression levels and methods"}),"\n",(0,s.jsx)(i.li,{children:"Supports UNC paths"}),"\n",(0,s.jsx)(i.li,{children:"Ability to preview which files will end up being processed"}),"\n",(0,s.jsx)(i.li,{children:"Process system and hidden files, overwrite read-only files"}),"\n",(0,s.jsx)(i.li,{children:"Supports the GZip, Zlib, Info-Zip, Java, and proprietary compression formats that include embedded checksums to ensure data integrity"}),"\n",(0,s.jsx)(i.li,{children:"True .NET pass-through stream object that can automatically compress or decompress any other type of .NET stream's data"}),"\n",(0,s.jsx)(i.li,{children:"Calculate CRC-32 and Adler-32 checksums on streams or byte arrays"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"self-extracting-zip-file-features",children:"Self-Extracting Zip File Features"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Create new self-extracting zip files or transform already existing zip files into self-extracting zip files"}),"\n",(0,s.jsx)(i.li,{children:"Self-extracting zip files can span multiple disks"}),"\n",(0,s.jsx)(i.li,{children:"Creates 32-bit self-extracting zip files that work on all Windows 95, 98, ME, NT, 2000, and XP operating systems, or 16-bit self-extracting zip files that work on Windows 3.x as well"}),"\n",(0,s.jsx)(i.li,{children:"Update and reconfigure an existing self-extracting zip file"}),"\n",(0,s.jsx)(i.li,{children:"Create self-extracting zip files for the traditional PKZIP 2.04g compression method. Also supports the Deflate64\u2122, BZip2, and BWT methods."}),"\n",(0,s.jsxs)(i.li,{children:["Create self-extracting zip files that support AES encryption. ",(0,s.jsx)(i.strong,{children:"(Not available in CF version)"})]}),"\n",(0,s.jsx)(i.li,{children:"Use extra headers such as Unicode filenames, extended filestamps, and security descriptors."}),"\n",(0,s.jsx)(i.li,{children:"Supports the Zip64 zip file format allowing the creation of Zip files that can contain a practically unlimited number of archived files. Note: Due to limitations in the Windows operating system, creating or using self-extracting Zip files larger than 2 GB is not recommended."}),"\n",(0,s.jsx)(i.li,{children:"Customizable introduction message and dialog box titles"}),"\n",(0,s.jsx)(i.li,{children:"Display a license agreement with configurable accept and refuse buttons"}),"\n",(0,s.jsx)(i.li,{children:"Customize all other messages, prompts, and button captions"}),"\n",(0,s.jsxs)(i.li,{children:["Customize the self-extracting zip file's application icon (",(0,s.jsx)(i.em,{children:"not available in .NET CF version"}),")"]}),"\n",(0,s.jsx)(i.li,{children:"Set the default unzipping folder"}),"\n",(0,s.jsx)(i.li,{children:"Allow user to select an alternate unzipping folder"}),"\n",(0,s.jsx)(i.li,{children:"Request a password whenever an encrypted file is encountered"}),"\n",(0,s.jsx)(i.li,{children:"The user can enter the decryption password or skip the file if they don't have the password for the file"}),"\n",(0,s.jsx)(i.li,{children:"Display a text file after successfully unzipping files"}),"\n",(0,s.jsx)(i.li,{children:"Customizable overwrite behavior with dialog box offering the user various overwrite options"}),"\n",(0,s.jsx)(i.li,{children:"Display unzipping status"}),"\n",(0,s.jsx)(i.li,{children:"User interaction and dialogs can be selectively shut off for quiet operation"}),"\n",(0,s.jsx)(i.li,{children:"Execute one or more applications (optionally with parameters) or open documents after successfully unzipping files"}),"\n",(0,s.jsx)(i.li,{children:"Copy one or more files from one location to another after unzipping"}),"\n",(0,s.jsx)(i.li,{children:"Register DLLs (or other libraries) on the system after unzipping"}),"\n",(0,s.jsx)(i.li,{children:"Add or change key values in the registry after unzipping"}),"\n",(0,s.jsx)(i.li,{children:"Create self-extracting zip files with a built-in decryption password. This prevents users from using compression utilities to unzip the files, forcing users to view your custom introduction, license agreement, or warning messages."}),"\n",(0,s.jsx)(i.li,{children:"Create program groups and insert items into program groups"}),"\n",(0,s.jsx)(i.li,{children:"Associate filename extensions with applications"}),"\n",(0,s.jsx)(i.li,{children:"Allows 3rd-party install or setup programs (and their data files) to be unzipped into a temporary folder, executed, and then deleted upon completion"}),"\n",(0,s.jsx)(i.li,{children:"Custom paths, filenames, strings, and prompts are parsed, allowing you to insert strings such as the current folder, windows and windows system directories, the temporary folder, and more."}),"\n"]}),"\n",(0,s.jsx)(i.hr,{})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var s=n(96540);const r={},t=s.createContext(r);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);