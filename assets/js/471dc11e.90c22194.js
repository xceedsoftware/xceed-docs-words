"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[4473],{35421:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>g,frontMatter:()=>t,metadata:()=>c,toc:()=>i});var s=n(74848),l=n(28453);const t={},o="Merge cells",c={id:"code-snippets/cell/merge-cells",title:"Merge cells",description:"This example demonstrates how to merge cells when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/cell/merge-cells.md",sourceDirName:"code-snippets/cell",slug:"/code-snippets/cell/merge-cells",permalink:"/xceed-libs-doc/workbooks/code-snippets/cell/merge-cells",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Insert cell range",permalink:"/xceed-libs-doc/workbooks/code-snippets/cell/insert-cell-range"},next:{title:"Replace content",permalink:"/xceed-libs-doc/workbooks/code-snippets/cell/replace-content"}},a={},i=[];function d(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"merge-cells",children:"Merge cells"})}),"\n",(0,s.jsx)(r.p,{children:"This example demonstrates how to merge cells when using the API from the Xceed Workbooks for .NET."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",children:'    public static void MergeCells()\r\n    {\r\n      using( var workbook = Workbook.Create( "MergeCells.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells["B1"].Value = "Merge and unmerge cells";\r\n        worksheet.Cells["B1"].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        //Merging only keep starting element informations.\r\n        worksheet.Cells["B3"].Value = "Centered merge using cells addresses";\r\n        worksheet.Cells["B3"].Style.Font = new Font() { Underline = true, Size = 12.5d };\r\n        worksheet.Cells["B4"].Value = "Some centered text.";\r\n        worksheet.MergedCells.Add("B4", "C5");\r\n\r\n        worksheet.Cells[6, 1].Value = "Centered merge using IDs";\r\n        worksheet.Cells[6, 1].Style.Font = new Font() { Underline = true, Size = 12.5d };\r\n        worksheet.Cells[7, 1].Value = "Some other text.";\r\n        worksheet.MergedCells.Add(7, 1, 8, 2);\r\n\r\n        //Centered using a cell range\r\n        worksheet.Cells[10, 1].Value = "Centered merge using a cell range.";\r\n        worksheet.Cells[10, 1].Style.Font = new Font() { Underline = true, Size = 12.5d };\r\n        worksheet.Cells[11, 1].Value = "Another text.";\r\n        worksheet.Cells[11, 1, 12, 2].MergeCells();\r\n\r\n        //Uncentered across using cell range\r\n        worksheet.Cells[14, 1].Value = "Uncentered across merge using a cell range.";\r\n        worksheet.Cells[14, 1].Style.Font = new Font() { Underline = true, Size = 12.5d };\r\n        worksheet.Cells[15, 1].Value = "Here is a text in across merge.";\r\n        worksheet.Cells[16, 1].Value = "Here is another text in across merge.";\r\n        worksheet.Cells[15, 1, 16, 4].MergeCells( false, true ) ;\r\n\r\n        //Remove using cell range\r\n        var cellRange = worksheet.Cells[17, 1, 18, 2];\r\n        cellRange.MergeCells();\r\n        cellRange.UnmergeCells();\r\n\r\n        //Remove using the MergedCellCollection\r\n        cellRange.MergeCells();\r\n        worksheet.MergedCells.RemoveAt(5);\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: MergeCells.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function g(e={}){const{wrapper:r}={...(0,l.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>c});var s=n(96540);const l={},t=s.createContext(l);function o(e){const r=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(t.Provider,{value:r},e.children)}}}]);