"use strict";(self.webpackChunkxceed_docs_words=self.webpackChunkxceed_docs_words||[]).push([[6674],{21464:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>h});var n=a(74848),r=a(28453),i=a(11470),s=a(19365);const l={},o="Optimizing Batch Updates to a Folder",c={id:"basic-concepts/optimizing-batch-updates-to-folder",title:"Optimizing Batch Updates to a Folder",description:"Xceed .NET Libraries Documentation",source:"@site/zip/basic-concepts/optimizing-batch-updates-to-folder.md",sourceDirName:"basic-concepts",slug:"/basic-concepts/optimizing-batch-updates-to-folder",permalink:"/xceed-libs-doc/zip/basic-concepts/optimizing-batch-updates-to-folder",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarzip",previous:{title:"Removing Items from a Zip File",permalink:"/xceed-libs-doc/zip/basic-concepts/removing-items-from-zip-file"},next:{title:"Handling Unicode characters",permalink:"/xceed-libs-doc/zip/basic-concepts/handling-unicode-characters"}},d={},h=[{value:"Xceed .NET Libraries Documentation",id:"xceed-net-libraries-documentation",level:2},{value:"Optimizing Batch Updates to a Folder",id:"optimizing-batch-updates-to-a-folder-1",level:3},{value:"<code>IBatchUpdateable</code> Interface",id:"ibatchupdateable-interface",level:3},{value:"Classes that Implement the IBatchUpdateable Interface",id:"classes-that-implement-the-ibatchupdateable-interface",level:3},{value:"Basic Steps",id:"basic-steps",level:4},{value:"Demonstration",id:"demonstration",level:4}];function u(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"optimizing-batch-updates-to-a-folder",children:"Optimizing Batch Updates to a Folder"})}),"\n",(0,n.jsx)(t.h2,{id:"xceed-net-libraries-documentation",children:"Xceed .NET Libraries Documentation"}),"\n",(0,n.jsx)(t.h3,{id:"optimizing-batch-updates-to-a-folder-1",children:"Optimizing Batch Updates to a Folder"}),"\n",(0,n.jsxs)(t.p,{children:["When performing multiple operations on a folder, the process can take a while to complete. Although events can provide feedback during these lengthy operations, it is also possible to reduce the time it takes to accomplish all the operations if the folder class being used implements the ",(0,n.jsx)(t.code,{children:"IBatchUpdateable"})," interface."]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"IBatchUpdateable"})," interface is defined within the ",(0,n.jsx)(t.code,{children:"Xceed.FileSystem"}),' namespace and is implemented by the "Archive" classes, such as the ',(0,n.jsx)(t.code,{children:"ZipArchive"}),", ",(0,n.jsx)(t.code,{children:"TarArchive"}),", and ",(0,n.jsx)(t.code,{children:"GZipArchive"})," classes."]}),"\n",(0,n.jsxs)(t.h3,{id:"ibatchupdateable-interface",children:[(0,n.jsx)(t.code,{children:"IBatchUpdateable"})," Interface"]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"IBatchUpdateable"})," interface implements the ",(0,n.jsx)(t.code,{children:"BeginUpdate"})," and ",(0,n.jsx)(t.code,{children:"EndUpdate"})," methods, which allow you to define a scope within which all modifications to a folder will be committed. Using this interface increases the speed of operations on the folder since modifications are not committed each time a method is called but rather once for all operations when the ",(0,n.jsx)(t.code,{children:"EndUpdate"})," method is called."]}),"\n",(0,n.jsxs)(t.p,{children:["If a class implements the ",(0,n.jsx)(t.code,{children:"IBatchUpdateable"})," interface, the ",(0,n.jsx)(t.code,{children:"BeginUpdate"})," and ",(0,n.jsx)(t.code,{children:"EndUpdate"})," methods can be called directly on the class. The following example shows how to do this with a Zip archive:"]}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsx)(s.A,{value:"csharp",label:"C#",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:'  using Xceed.FileSystem;\r\n  using Xceed.Zip;\r\n\r\n  ZipArchive archive = new ZipArchive(new DiskFile(@"c:\\test.zip"));\r\n  archive.BeginUpdate();\r\n  // Code for operations on the folder\r\n  archive.EndUpdate();\n'})})}),(0,n.jsx)(s.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb.NET",children:'  Imports Xceed.FileSystem\r\n  Imports Xceed.Zip\r\n\r\n  Dim archive As New ZipArchive(New DiskFile("c:\\test.zip"))\r\n  archive.BeginUpdate()\r\n  \' Code for operations on the folder\r\n  archive.EndUpdate()\n'})})})]}),"\n",(0,n.jsx)(t.h3,{id:"classes-that-implement-the-ibatchupdateable-interface",children:"Classes that Implement the IBatchUpdateable Interface"}),"\n",(0,n.jsx)(t.p,{children:"The AutoBatchUpdate class automatically checks if the folder class passed to its constructor implements the IBatchUpdateable interface. If it does, the BeginUpdate and EndUpdate methods are called automatically. If not, the code is executed normally."}),"\n",(0,n.jsx)(t.h4,{id:"basic-steps",children:"Basic Steps"}),"\n",(0,n.jsx)(t.p,{children:"To perform batch updates, follow these steps:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Verify if the folder class implements the IBatchUpdateable interface. This can only be done via the root of the folder."}),"\n",(0,n.jsx)(t.li,{children:"If the IBatchUpdateable interface is implemented, call the BeginUpdate method to mark the beginning of your scope."}),"\n",(0,n.jsx)(t.li,{children:"Perform the various operations on the folder."}),"\n",(0,n.jsx)(t.li,{children:"To commit the modifications made to the folder, call the EndUpdate method. It is important to always call EndUpdate; otherwise, the modifications will not be committed."}),"\n"]}),"\n",(0,n.jsx)(t.h4,{id:"demonstration",children:"Demonstration"}),"\n",(0,n.jsx)(t.p,{children:"This example demonstrates how to use the IBatchUpdateable interface directly:"}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsx)(s.A,{value:"csharp",label:"C#",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"  using Xceed.FileSystem\r\n  \r\n  //folder represents any type of folder\r\n  IBatchUpdateable batch = folder.RootFolder as IBatchUpdateable;\r\n            \r\n  //Check if our folder class implements the IBatchUpdateable interface via it's root\r\n  //If it does, call the BeginUpdate method.\r\n  if( batch != null )\r\n    batch.BeginUpdate();\r\n  \r\n  try\r\n  {\r\n    //Perform the various operations.\r\n  }\r\n  finally\r\n  {\r\n    if( batch != null )\r\n      batch.EndUpdate();\r\n  } \n"})})}),(0,n.jsx)(s.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb.NET",children:"  Imports Xceed.FileSystem\r\n\r\n  Dim batch As IBatchUpdateable = Nothing\r\n\r\n  If TypeOf folder.RootFolder Is IBatchUpdateable Then\r\n    batch = folder.RootFolder\r\n    batch.BeginUpdate()\r\n  End If\r\n\r\n  Try\r\n  'Perform the various operations\r\n  Finally\r\n    If Not batch Is Nothing Then\r\n      batch.EndUpdate()\r\n    End If\r\n  End Try\n"})})})]}),"\n",(0,n.jsx)(t.p,{children:"This example demonstrates how to use the AutoBatchUpdate class rather than manually calling the BeginUpdate and EndUpdate methods manually:"}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsx)(s.A,{value:"csharp",label:"C#",default:!0,children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:"  //folder represents any type of folder\r\n  using( AutoBatchUpdate batch = new AutoBatchUpdate( folder.RootFolder ) )\r\n  { \r\n    //Perform the various operations.\r\n    //Once the scope of the using statement is exited, if the folder class implemented\r\n    //the IBatchUpdateable interface, the changes to the folder will be committed.\r\n  }\n"})})}),(0,n.jsx)(s.A,{value:"vb.net",label:"Visual Basic .NET",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-vb.NET",children:"  'folder represents any type of folder\r\n  Dim batch As New AutoBatchUpdate( folder.RootFolder ) \r\n\r\n  'Perform the various operations.\r\n  'Commit the modifications to the folder\r\n\r\n  batch.Dispose()\n"})})})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},19365:(e,t,a)=>{a.d(t,{A:()=>s});a(96540);var n=a(34164);const r={tabItem:"tabItem_Ymn6"};var i=a(74848);function s(e){let{children:t,hidden:a,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,s),hidden:a,children:t})}},11470:(e,t,a)=>{a.d(t,{A:()=>y});var n=a(96540),r=a(34164),i=a(23104),s=a(56347),l=a(205),o=a(57485),c=a(31682),d=a(70679);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,s.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o.aZ)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,i=u(e),[s,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[c,h]=m({queryString:a,groupId:r}),[f,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,d.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:r}),v=(()=>{const e=c??f;return p({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{v&&o(v)}),[v]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),b(e)}),[h,b,i]),tabValues:i}}var b=a(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=a(74848);function g(e){let{className:t,block:a,selectedValue:n,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const t=e.currentTarget,a=o.indexOf(t),r=l[a].value;r!==n&&(c(t),s(r))},h=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=o.indexOf(e.currentTarget)+1;t=o[a]??o[0];break}case"ArrowLeft":{const a=o.indexOf(e.currentTarget)-1;t=o[a]??o[o.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},t),children:l.map((e=>{let{value:t,label:a,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>o.push(e),onKeyDown:h,onClick:d,...i,className:(0,r.A)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function j(e){let{lazy:t,children:a,selectedValue:i}=e;const s=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===i));return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==i})))})}function I(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,x.jsx)(g,{...t,...e}),(0,x.jsx)(j,{...t,...e})]})}function y(e){const t=(0,b.A)();return(0,x.jsx)(I,{...e,children:h(e.children)},String(t))}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>l});var n=a(96540);const r={},i=n.createContext(r);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);