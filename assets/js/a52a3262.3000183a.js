"use strict";(self.webpackChunkxceed_libs_doc=self.webpackChunkxceed_libs_doc||[]).push([[1617],{25100:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var r=t(74848),o=t(28453);const c={},i="Replacing Text",s={id:"code-snippets/documents/replacing-text",title:"Replacing Text",description:"The following example demonstrates how to replace text in a Document.",source:"@site/docs/code-snippets/documents/replacing-text.md",sourceDirName:"code-snippets/documents",slug:"/code-snippets/documents/replacing-text",permalink:"/xceed-libs-doc/docs/code-snippets/documents/replacing-text",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Replacing Text with Objects",permalink:"/xceed-libs-doc/docs/code-snippets/documents/replacing-text-with-objects"},next:{title:"Converting to PDF",permalink:"/xceed-libs-doc/docs/code-snippets/documents/converting-to-pdf"}},a={},d=[];function l(e){const n={admonition:"admonition",br:"br",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"replacing-text",children:"Replacing Text"})}),"\n",(0,r.jsx)(n.p,{children:"The following example demonstrates how to replace text in a Document."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The document contains tags that look like ",(0,r.jsx)(n.strong,{children:"<GAME_TIME>"}),(0,r.jsx)(n.br,{}),"\n","These tags will be replaced by the corresponding string."]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'private static Dictionary<string, string> _replacePatterns = new Dictionary<string, string>()\r\n{\r\n    { "OPPONENT", "Atlanta Knight" },\r\n    { "GAME_TIME", "7:30pm" },\r\n    { "GAME_NUMBER", "161" },\r\n    { "DATE", "October 18 2022" },\r\n};\r\n\r\nstatic void Main(string[] args)\r\n{\r\n    // Load a document.\r\n    using (var document = DocX.Load("ReplaceText.docx"))\r\n    {\r\n        // Check if all the replace patterns are used in the loaded document.\r\n        if (document.FindUniqueByPattern(@"<[\\w \\=]{4,}>", RegexOptions.IgnoreCase).Count > 0)\r\n        {\r\n            // Do the replacement of all the found tags and with green bold strings.\r\n            var replaceTextOptions = new FunctionReplaceTextOptions()\r\n            {\r\n                FindPattern = "<(.*?)>",\r\n                RegexMatchHandler = Program.ReplaceFunc,\r\n                RegExOptions = RegexOptions.IgnoreCase,\r\n                NewFormatting = new Formatting() { Bold = true, FontColor = System.Drawing.Color.Green }\r\n            };\r\n            document.ReplaceText(replaceTextOptions);\r\n            // Save this document to disk.\r\n            document.SaveAs("ReplacedText.docx");\r\n        }\r\n    }\r\n}\r\n\r\nprivate static string ReplaceFunc(string findStr)\r\n{\r\n    if (_replacePatterns.ContainsKey(findStr))\r\n    {\r\n        return _replacePatterns[findStr];\r\n    }\r\n    return findStr;\r\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>s});var r=t(96540);const o={},c=r.createContext(o);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);