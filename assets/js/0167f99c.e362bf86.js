"use strict";(self.webpackChunkxceed_libs_doc=self.webpackChunkxceed_libs_doc||[]).push([[588],{97822:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var o=r(74848),n=r(28453);const s={},i="Shrink picture with offset",c={id:"code-snippets/picture/shrink-picture-with-offset",title:"Shrink picture with offset",description:"This example demonstrates how to shrink picture with offset when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/picture/shrink-picture-with-offset.md",sourceDirName:"code-snippets/picture",slug:"/code-snippets/picture/shrink-picture-with-offset",permalink:"/xceed-libs-doc/workbooks/code-snippets/picture/shrink-picture-with-offset",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Offset Picture",permalink:"/xceed-libs-doc/workbooks/code-snippets/picture/offset-picture"},next:{title:"Protection",permalink:"/xceed-libs-doc/workbooks/category/protection"}},h={},a=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"shrink-picture-with-offset",children:"Shrink picture with offset"})}),"\n",(0,o.jsx)(t.p,{children:"This example demonstrates how to shrink picture with offset when using the API from the Xceed Workbooks for .NET."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'    public static void ShrinkPictureWithOffset()\r\n    {\r\n      using( var workbook = Workbook.Create( "ShrinkPicture.xlsx") )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var worksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Add a title.\r\n        worksheet.Cells[ "B1" ].Value = "Shrink picture with offset"; \r\n        worksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        // Add a picture using a stream.\r\n        worksheet.Cells[ "A3" ].Value = "Original Picture";\r\n        worksheet.Cells[ "A3" ].Style.Font = new Font() { Bold = true };\r\n        \r\n        var stream = new FileStream( PictureSampleResourcesDirectory + @"balloon.jpg", FileMode.Open, FileAccess.Read );\r\n        worksheet.Pictures.Add( stream, "A4", "E12"  );\r\n        \r\n        // Add two anchor picture.\r\n        worksheet.Cells[ "F3" ].Value = "Shrank Picture";\r\n        worksheet.Cells[ "F3" ].Style.Font = new Font() { Bold = true };\r\n        var filenamePicture = worksheet.Pictures.Add( stream, "F4", "J12" );\r\n\r\n        //Set a negative offset to shrink the picture.\r\n        //Warning if the offset is superior the width or the height of the picture, it will disapper.\r\n        filenamePicture.BottomRightOffsets = new Position(-1, -1, Units.Inch);\r\n\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: ShrinkPicture.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>c});var o=r(96540);const n={},s=o.createContext(n);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);