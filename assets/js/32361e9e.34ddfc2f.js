"use strict";(self.webpackChunkxceed_libs_doc=self.webpackChunkxceed_libs_doc||[]).push([[5955],{20598:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=t(74848),n=t(28453);const s={},l="Modify Theme",c={id:"code-snippets/style/modify-theme",title:"Modify Theme",description:"This example demonstrates how to modify theme when using the API from the Xceed Workbooks for .NET.",source:"@site/workbooks/code-snippets/style/modify-theme.md",sourceDirName:"code-snippets/style",slug:"/code-snippets/style/modify-theme",permalink:"/xceed-libs-doc/workbooks/code-snippets/style/modify-theme",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebarsworkbooks",previous:{title:"Text direction & orientation",permalink:"/xceed-libs-doc/workbooks/code-snippets/style/text-direction-orientation"}},i={},d=[];function h(e){const o={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"modify-theme",children:"Modify Theme"})}),"\n",(0,r.jsx)(o.p,{children:"This example demonstrates how to modify theme when using the API from the Xceed Workbooks for .NET."}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-csharp",children:'    public static void ModifyTheme()\r\n    {\r\n      using( var workbook = Workbook.Create( "ModifyTheme.xlsx" ) )\r\n      {\r\n        // Get the first worksheet. A workbook contains at least 1 worksheet.\r\n        var cellWorksheet = workbook.Worksheets[ 0 ];\r\n\r\n        // Modify Workbook theme name and colors.\r\n        workbook.Theme.Name = "My Theme";\r\n        workbook.Theme.Colors[ ThemeColorType.Accent1 ].Color = Color.Red;\r\n        workbook.Theme.Colors[ ThemeColorType.Text1 ].Color = Color.Green;\r\n\r\n        // Add a title using the new Theme default Text1 color.\r\n        cellWorksheet.Cells[ "B1" ].Value = "Modify theme";\r\n        cellWorksheet.Cells[ "B1" ].Style.Font = new Font() { Bold = true, Size = 15.5d };\r\n\r\n        cellWorksheet.Cells[ "C5" ].Value = "Using new Accent1 color";\r\n        cellWorksheet.Cells[ "C5" ].Style.Font = new Font() { ThemeColor = new ThemeColor( ThemeColorType.Accent1 ) };\r\n\r\n        cellWorksheet.Cells[ "C7" ].Value = "Using darker Accent1 color";\r\n        cellWorksheet.Cells[ "C7" ].Style.Font = new Font() { ThemeColor = new ThemeColor( ThemeColorType.Accent1, -0.75d ) };\r\n\r\n        cellWorksheet.Cells[ "C9" ].Value = "Using lighter Accent1 color";\r\n        cellWorksheet.Cells[ "C9" ].Style.Font = new Font() { ThemeColor = new ThemeColor( ThemeColorType.Accent1, 0.5d ) };\r\n\r\n        // AutoFit column "C".\r\n        cellWorksheet.Columns[ "C" ].AutoFit();\r\n\r\n        // Save workbook to disk.\r\n        workbook.Save();\r\n        Console.WriteLine( "\\tCreated: ModifyTheme.xlsx\\n" );\r\n      }\r\n    }\n'})})]})}function m(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>l,x:()=>c});var r=t(96540);const n={},s=r.createContext(n);function l(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);